/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "MMS-SCI-Module-1"
 * 	found in "IEC61850.asn1"
 * 	`asn1c -S/skeletons -fnative-types`
 */

#ifndef	_Access_Control_List_instance_H_
#define	_Access_Control_List_instance_H_


#include "asn_application.h"

/* Including external dependencies */
#include "Identifier.h"
#include "OBJECT_IDENTIFIER.h"
#include "asn_SEQUENCE_OF.h"
#include "constr_SEQUENCE_OF.h"
#include "constr_SEQUENCE.h"
#include "constr_CHOICE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum Access_Control_List_instance__definition_PR {
	Access_Control_List_instance__definition_PR_NOTHING,	/* No components present */
	Access_Control_List_instance__definition_PR_reference,
	Access_Control_List_instance__definition_PR_details
} Access_Control_List_instance__definition_PR;

/* Forward declarations */
struct Access_Control_List_instance;
struct AccessCondition;
struct Domain_instance;
struct Program_Invocation_instance;
struct Unit_Control_instance;
struct Unnamed_Variable_instance;
struct Named_Variable_instance;
struct Named_Variable_List_instance;
struct Named_Type_instance;
struct Data_Exchange_instance;
struct Semaphore_instance;
struct Operator_Station_instance;
struct Event_Condition_instance;
struct Event_Action_instance;
struct Event_Enrollment_instance;
struct Journal_instance;
struct Event_Condition_List_instance;

/* Access-Control-List-instance */
typedef struct Access_Control_List_instance {
	Identifier_t	 name;
	struct Access_Control_List_instance__definition {
		Access_Control_List_instance__definition_PR present;
		union Access_Control_List_instance__definition_u {
			OBJECT_IDENTIFIER_t	 reference;
			struct Access_Control_List_instance__definition__details {
				struct Access_Control_List_instance	*accessControl;
				struct AccessCondition	*readAccessCondition	/* OPTIONAL */;
				struct AccessCondition	*storeAccessCondition	/* OPTIONAL */;
				struct AccessCondition	*writeAccessCondition	/* OPTIONAL */;
				struct AccessCondition	*loadAccessCondition	/* OPTIONAL */;
				struct AccessCondition	*executeAccessCondition	/* OPTIONAL */;
				struct AccessCondition	*deleteAccessCondition	/* OPTIONAL */;
				struct AccessCondition	*editAccessCondition	/* OPTIONAL */;
				struct Access_Control_List_instance__definition__details__accessControlLists {
					A_SEQUENCE_OF(struct Access_Control_List_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} accessControlLists;
				struct Access_Control_List_instance__definition__details__domains {
					A_SEQUENCE_OF(struct Domain_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} domains;
				struct Access_Control_List_instance__definition__details__programInvocations {
					A_SEQUENCE_OF(struct Program_Invocation_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} programInvocations;
				struct Access_Control_List_instance__definition__details__unitControls {
					A_SEQUENCE_OF(struct Unit_Control_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} unitControls;
				struct Access_Control_List_instance__definition__details__unnamedVariables {
					A_SEQUENCE_OF(struct Unnamed_Variable_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} unnamedVariables;
				struct Access_Control_List_instance__definition__details__namedVariables {
					A_SEQUENCE_OF(struct Named_Variable_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} namedVariables;
				struct Access_Control_List_instance__definition__details__namedVariableLists {
					A_SEQUENCE_OF(struct Named_Variable_List_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} namedVariableLists;
				struct Access_Control_List_instance__definition__details__namedTypes {
					A_SEQUENCE_OF(struct Named_Type_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} namedTypes;
				struct Access_Control_List_instance__definition__details__dataExchanges {
					A_SEQUENCE_OF(struct Data_Exchange_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} dataExchanges;
				struct Access_Control_List_instance__definition__details__semaphores {
					A_SEQUENCE_OF(struct Semaphore_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} semaphores;
				struct Access_Control_List_instance__definition__details__operatorStations {
					A_SEQUENCE_OF(struct Operator_Station_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} operatorStations;
				struct Access_Control_List_instance__definition__details__eventConditions {
					A_SEQUENCE_OF(struct Event_Condition_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} eventConditions;
				struct Access_Control_List_instance__definition__details__eventActions {
					A_SEQUENCE_OF(struct Event_Action_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} eventActions;
				struct Access_Control_List_instance__definition__details__eventEnrollments {
					A_SEQUENCE_OF(struct Event_Enrollment_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} eventEnrollments;
				struct Access_Control_List_instance__definition__details__journals {
					A_SEQUENCE_OF(struct Journal_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} journals;
				/*
				 * This type is extensible,
				 * possible extensions are below.
				 */
				struct Access_Control_List_instance__definition__details__eventConditionLists {
					A_SEQUENCE_OF(struct Event_Condition_List_instance) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} *eventConditionLists;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} details;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} definition;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Access_Control_List_instance_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Access_Control_List_instance;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "Access-Control-List-instance.h"
#include "AccessCondition.h"
#include "Domain-instance.h"
#include "Program-Invocation-instance.h"
#include "Unit-Control-instance.h"
#include "Unnamed-Variable-instance.h"
#include "Named-Variable-instance.h"
#include "Named-Variable-List-instance.h"
#include "Named-Type-instance.h"
#include "Data-Exchange-instance.h"
#include "Semaphore-instance.h"
#include "Operator-Station-instance.h"
#include "Event-Condition-instance.h"
#include "Event-Action-instance.h"
#include "Event-Enrollment-instance.h"
#include "Journal-instance.h"
#include "Event-Condition-List-instance.h"

#endif	/* _Access_Control_List_instance_H_ */
